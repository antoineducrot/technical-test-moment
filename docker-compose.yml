version: "3.8"

name: moment-prod

services:
  web:
    container_name: moment-web
    build:
      context: .
      args:
        - NEXT_PUBLIC_API_URL=http://moment-api:${API_PORT}
      dockerfile: apps/web/Dockerfile.mono
    ports:
      - "${WEB_PORT}:3000"
    depends_on:
      - api
    environment:
      - NEXT_PUBLIC_API_URL=http://moment-api:${API_PORT}
    networks:
      - api

  api:
    container_name: moment-api
    build:
      context: .
      dockerfile: apps/api/Dockerfile.mono
    ports:
      - "${API_PORT}:4000"
    depends_on:
      - postgres
    environment:
      - PORT=4000
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - JWT_SECRET=${API_JWT_SECRET}
      - JWT_EXPIRES_IN=${API_JWT_EXPIRES_IN}
    networks:
      - api
      - postgres

  postgres:
    container_name: postgres
    image: postgres

    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    build:
      context: .
      dockerfile: docker/pg-admin/Dockerfile.mono
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: ${PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED}
    networks:
      - postgres

networks:
  api:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres_data:
  pgadmin-data:
